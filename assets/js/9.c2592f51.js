(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{209:function(a,t,s){"use strict";s.r(t);var e=s(0),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// linux")]),a._v("\nyum install git"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("all\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// mac")]),a._v("\nbrew install git\n")])])]),s("h2",{attrs:{id:"config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[a._v("#")]),a._v(" config")]),a._v(" "),s("p",[s("strong",[a._v("全局 只需设置一直 设置后无法修改")])]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('git config --global user.name "John Doe"\ngit config --global user.email johndoe@example.com\n')])])]),s("p",[s("strong",[a._v("如果在单独的项目使用不用 user.name，则需输入没有 --global 即可")])]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('git config user.name "John Doe"\ngit config user.email johndeo@example.com\n')])])]),s("h2",{attrs:{id:"获取帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取帮助"}},[a._v("#")]),a._v(" 获取帮助")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git help config\nman git-config\n")])])]),s("h2",{attrs:{id:"clone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clone"}},[a._v("#")]),a._v(" clone")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git clone xxxxxx\n\n# newDirName 表示用新文件名\ngit clone xxxxxx newDirName\n\n# 指定分支\ngit clone -b [branch-name] [url]\n")])])]),s("h2",{attrs:{id:"status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[a._v("#")]),a._v(" status")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# --long [Give the output in the long-format. this is the default]\n# -s, --short  [Give the output in the short-format]\n")])])]),s("h2",{attrs:{id:"diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[a._v("#")]),a._v(" diff")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 查看当前修改的代码\ngit diff\n\n# 缓存区\ngit diff --cached\n")])])]),s("h2",{attrs:{id:"log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[a._v("#")]),a._v(" log")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# long-format\ngit log\n\n# short-format\ngit log --stat\n\n# 当查看大数量信息时，一行显示\ngit log --pretty=oneline\n\n# 自定义显示\n# https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2#pretty_format\n")])])]),s("h2",{attrs:{id:"commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[a._v("#")]),a._v(" commit")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 用于撤回当前修改 commit message\ngit commit --amend\n")])])]),s("h2",{attrs:{id:"tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[a._v("#")]),a._v(" tag")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 打标签\ngit tag -a v0.1 -m 'my first tag'\n\n# 查看指定标签\ngit show v0.1\n\n# 忘记打某个版本标签\ngit tag -a v1.2 9fceb02[commit-id]\n")])])]),s("h2",{attrs:{id:"branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#branch"}},[a._v("#")]),a._v(" branch")]),a._v(" "),s("p",[s("strong",[a._v("HEAD 指针关系")])]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# 创建分支\ngit branch branch-name\n\n# 删除分支\ngit branch -d\n\n# 查看分支\ngit branch --all\n\n# 切换分支\ngit checkout branch-name\n\n# 创建并切换\ngit checkout -b branch-name\n\n# 合并分支\ngit merge branch-name\n")])])]),s("h1",{attrs:{id:"git-work-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-work-flow"}},[a._v("#")]),a._v(" git work-flow")]),a._v(" "),s("p",[s("strong",[a._v("主题分支")])]),a._v(" "),s("p",[a._v("以功能命名的分支")]),a._v(" "),s("p",[a._v("ps: 请牢记，当你做这么多操作的时候，这些分支全部都存于本地。 当你新建和合并分支的时候，所有这一切都只发生在你本地的 Git 版本库中 —— 没有与服务器发生交互。")]),a._v(" "),s("h1",{attrs:{id:"rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[a._v("#")]),a._v(" rebase")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\n\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);